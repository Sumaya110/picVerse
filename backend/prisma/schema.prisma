// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  email        String   @unique
  password     String
  profilePic   String?  // Profile picture URL
  bio          String?
  createdAt    DateTime @default(now())

  images       Image[]  // User's uploaded images
  likes        Like[]   // User's liked images

  rating       Float    @default(0) 
}

model Image {
  id          String   @id @default(uuid())
  url         String  
  thumbnail   String?  // Compressed version for preview
  size        Int      // Original file size in MB
  compressed  Boolean  @default(false) 
  isPrivate   Boolean  @default(true)
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())

  likes       Like[]  
  views       Int      @default(0) 
}

model Like {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  imageId   String
  image     Image    @relation(fields: [imageId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, imageId]) // Prevent duplicate likes
}
